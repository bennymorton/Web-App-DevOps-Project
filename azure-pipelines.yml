# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure-prov-test

pool:
  vmImage: ubuntu-latest

steps:
- task: Docker@2
  inputs:
    containerRegistry: 'Docker Hub'
    repository: 'mayaaiuga/azure-prov-test'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'


- task: Bash@3
  inputs:
    targetType: 'inline'
    scriptType: 'bash'
    scriptPath: ''
    script: |
      echo "Creating Kubernetes secrets..."
      
      # Fetch the pipeline secrets and export them as environment variables
      export DB_SERVER=$(DB_SERVER)
      export DB_DATABASE=$(DB_DATABASE)
      export DB_USERNAME=$(DB_USERNAME)
      export DB_PASSWORD=$(DB_PASSWORD)

      # Create the Kubernetes secret
      kubectl create secret generic flask-app-secrets \
        --from-literal=db-server="$DB_SERVER" \
        --from-literal=db-database="$DB_DATABASE" \
        --from-literal=db-username="$DB_USERNAME" \
        --from-literal=db-password="$DB_PASSWORD" \
        --dry-run=client -o yaml | kubectl apply -f -
  displayName: 'Create Kubernetes Secrets'
  env:
    DB_SERVER: $(DB_SERVER)
    DB_DATABASE: $(DB_DATABASE)
    DB_USERNAME: $(DB_USERNAME)
    DB_PASSWORD: $(DB_PASSWORD)


      
- task: Kubernetes@1
  inputs:
    connectionType: 'azureResourceManager'
    azureSubscription: 'aks-connection'
    azureResourceGroup: '9b5daa2d-terraform-rg'
    kubernetesCluster: '9b5daa2d-aks-cluster'
    command: 'apply'
    arguments: '-f deployment.yaml'
  displayName: 'Apply Deployment'